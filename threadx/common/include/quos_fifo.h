#ifndef __FIFO_H__
#define __FIFO_H__

#include "quos_config.h"
#if (SDK_ENABLE_FIFO == 1)

typedef struct
{
    quint32_t head;
    quint32_t tail;
    quint32_t bufSize;
    qbool isfull;
    quint8_t *fifoBuf;
} Quos_fifo_t;

/**************************************************************************
**@brief : 环形队列初始化(必须在使用队列之前调用)
**@param : buf[in]： 队列数据缓冲区指针
**         size[in]：队列最大长度
**@retval: fifo结构体
***************************************************************************/
Quos_fifo_t Quos_fifoInit(quint8_t *buf, quint32_t size);


/**************************************************************************
**@brief : 计算环形队列中已用空间大小
**@param : fifo[in]:环形队列句柄
**@retval: 已用空间大小
***************************************************************************/
quint32_t Quos_fifoUsedLen(Quos_fifo_t *fifo);

/**************************************************************************
**@brief : 计算环形队列中剩余可用空间大小
**@param : fifo[in]:环形队列句柄
**@retval: 剩余可用空间大小
***************************************************************************/
quint32_t Quos_fifoFreeLen(Quos_fifo_t *fifo);

/**************************************************************************
**@brief : 清空环形队列数据缓冲区
**@param : fifo[in]:环形队列句柄
**@retval: void
***************************************************************************/
void Quos_fifoClear(Quos_fifo_t *fifo);

/**************************************************************************
**@brief : 删除环形队列
**@param : fifo[in]:环形队列句柄
**@retval: void
***************************************************************************/
void Quos_fifoDelete(Quos_fifo_t *fifo);

/**************************************************************************
**@brief: 向环形队列写入指定长度数据(队列空间不足时，则写满为止)
**@param: fifo[in]:环形队列句柄
**        buf[in]:待写入数据缓冲器指针
**        len[in]:需要写入的数据长度
**@retval: 返回实际写入的数据长度
***************************************************************************/
quint32_t Quos_fifoWrite(Quos_fifo_t *fifo, void *buf, quint32_t len);

/**************************************************************************
**@brief : 读取环形队列指定偏移的一个数据(数据读取后，读指针不做偏移)
**@param : fifo[in]:环形队列句柄
**         buf[out]:用于存储读取数据的缓存区指针
**         offset[in]:待读取数据的偏移
**@retval: 0:读取成功，非0:读取失败
***************************************************************************/
qint8_t Quos_fifoCheckOffset(Quos_fifo_t *fifo, void *buf, quint32_t offset);

/**************************************************************************
**@brief : 读取环形队列指定偏移的多个数据
**         队列数据不够时，读取到队列尾结束(数据读取后，读指针不做偏移)
**@param : fifo[in]:环形队列句柄
**         buf[out]:用于存储读取数据的缓存区指针
**         offset[in]:待读取数据的偏移
**         len[in]:需要读取的数据长度
**@retval: 实际读取的数据长度
***************************************************************************/
quint32_t Quos_fifoReadByte_noDel(Quos_fifo_t *fifo, void *buf, quint32_t offset, quint32_t len);

/**************************************************************************
**@brief : 读取环形队列指定长度的数据(读取后，队列读指针同步进行偏移)
**@param : fifo[in]:环形队列句柄
**         buf[out]:用于存储读取数据的缓存区指针
**         len[in]:需要读取的数据长度
**@retval: 实际读取的数据长度
***************************************************************************/
quint32_t Quos_fifoReadByte_del(Quos_fifo_t *fifo, void *buf, quint32_t len);

/**************************************************************************
**@brief : 从环形队列队头开始删除指定长度的数据
**@param : fifo[in]:环形队列句柄
**         len[in]:待删除数据长度
**@retval: void
***************************************************************************/
void Quos_fifoDeleteNByte(Quos_fifo_t *fifo, quint32_t len);

/**************************************************************************
**@brief : 查找环形队列指定偏移后是否存在特定字节流
**@param : fifo[in]:环形队列句柄
**         offset[in]:队列数据偏移
**         buf[in]:队列里待查找字节流指针
**         bufLen[in]:待查找字节流数据长度
**@retval: -1:队列指定偏移后不存在需要查找的字节流
**         非负数：队列中查找到的字节流起始位置(队列头的偏移值)
***************************************************************************/
qint32_t Quos_fifoStrstr(Quos_fifo_t *fifo, quint32_t offset, void *buf, quint32_t bufLen);

#endif/*SDK_ENABLE_FIFO */
#endif/*__FIFO_H__ */
