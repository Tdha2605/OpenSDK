#ifndef __QUOS_SYSTICK_H__
#define __QUOS_SYSTICK_H__
#include "quos_config.h"

#if (1 == SDK_ENABLE_SYSTICK)

typedef struct
{
    quint32_t ms;  /* millisecond */
    quint32_t sec; /*  second,support 136years */
} Systick_T;

typedef struct
{
    quint8_t tm_wday;  /* 星期 - 取值区间为[0,6]，星期天 - 星期六*/
    quint8_t tm_sec;   /* 秒 - 取值区间为[0,59] */
    quint8_t tm_min;   /* 分 - 取值区间为[0,59] */
    quint8_t tm_hour;  /* 时 - 取值区间为[0,23] */
    quint8_t tm_mday;  /* 一个月中的日期 - 取值区间为[1,31] */
    quint8_t tm_mon;   /* 月份（从一月开始，0代表一月） - 取值区间为[0,11] */
    quint32_t tm_year; /* 实际年份，不小于1970 */
} Quos_tm_t;

/**************************************************************************
**@brief : 初始化系统时间
**@param : void
**@retval: void
***************************************************************************/
void Quos_sysTickInit(void);

/**************************************************************************
**@brief : 纠正系统时间
**@param : 当前最新有效时间
**@retval: void
***************************************************************************/
void Quos_sysTickRectify(Systick_T sysTickNew);

/**************************************************************************
**@brief : 获取当前系统运行时间
**@param : void
**@retval:Systick_T结构体
***************************************************************************/
Systick_T Quos_sysTickGet(void);

/**************************************************************************
**@brief : 获取当前系统运行时间(单位:毫秒)....该接口50天左右会出现溢出
**@param : void
**@retval: 当前系统运行时间
***************************************************************************/
quint32_t Quos_sysTickGetMs(void);

/**************************************************************************
**@brief : 获取当前系统运行时间(单位:秒)
**@param : void
**@retval: 当前系统运行时间
***************************************************************************/
quint32_t Quos_sysTickGetS(void);

/**************************************************************************
**@brief : 给指定时间点追加时间
**@param : tick[in]:待追加的时间结构体
**         ms[in]:追加时长(单位:毫秒)
**@retval: 追加后的时间结构体
***************************************************************************/
Systick_T Quos_sysTickAddMs(Systick_T tick, quint32_t ms);

/**************************************************************************
**@brief : 比较时间大小
**@param : time1[in]:待比较的时间1
**         time2[in]:待比较的时间2
**         isMs[in]:TRUE表示输出的时间差单位为毫秒, FALSE表示输出的时间差单位为秒
**         interval[out]:两时间的差值(差值单位由参数isMs决定)
**@retval: TRUE:时间1>时间2，FALSE:时间1<=时间2
***************************************************************************/
qbool Quos_sysTickdiff(Systick_T time1, Systick_T time2, qbool isMs, quint32_t *interval);

/**************************************************************************
**@brief : 设置时区
**@param : tz[in]:与0时区的时差(单位:秒)
**               tz取值范围为[-12*3600,12*3600],其它值将直接返回FALSE
**@retval: TRUE:设置成功, FALSE:非法时区
***************************************************************************/
qbool Quos_timezoneSet(qint32_t tz);

/**************************************************************************
**@brief : 获取时区
**@param : void
**@retval: 当前时区与0时区的时差(单位:秒)
***************************************************************************/
qint32_t Quos_timezoneGet(void);

/**************************************************************************
 * @brief: 将standard offset格式时区转为数值型, 格式要求必须是-00:00，其他格式会转换出错
 * @param:
 * @retval:
 ***************************************************************************/
qbool Quos_timezone2Int(const char *zoneStr, qint32_t *zoneInt);

/**************************************************************************
**@brief : 时间戳转成年月日时分秒
**@param : time[in]:时间戳
**@retval: Quos_tm_t结构体
***************************************************************************/
Quos_tm_t Quos_localtime(quint32_t time);

/**************************************************************************
**@brief : 年月日时分秒转成时间戳
**@param : tm[in]:Quos_tm_t结构体
**@retval: 时间戳值
***************************************************************************/
quint32_t Quos_mktime(Quos_tm_t tm);

#endif/*SDK_ENABLE_SYSTICK */
#endif/*__QUOS_SYSTICK_H__ */
